// Copyright 2024 QMK
// SPDX-License-Identifier: GPL-2.0-or-later

// This was file generated on 2024-06-10 11:52:59.
// Do not edit this file directly!

#pragma once

#define SEQUENCE_TRANSFORM_GENERATOR_VERSION_3_2

#define TRIECODE_SEQUENCE_TOKEN_0 0x0080
#define TRIECODE_SEQUENCE_METACHAR_0 0x00A0
#define TRIECODE_SEQUENCE_REF_TOKEN_0 0x0080
#define SEQUENCE_MIN_LENGTH 2 // "a👆"
#define SEQUENCE_MAX_LENGTH 5 // "dont👆"
#define TRANSFORM_MAX_LENGTH 6 // "∇ld've"
#define COMPLETION_MAX_LENGTH 3
#define MAX_BACKSPACES 2
#define SEQUENCE_TRIE_SIZE 433
#define COMPLETIONS_SIZE 33
#define SEQUENCE_TOKEN_COUNT 4
#define SEQUENCE_METACHAR_COUNT 8
#define SEQUENCE_REF_TOKEN_COUNT 8

static const char st_seq_token_ascii_chars[] = { '*', '@', '#', '&' };
#ifdef ST_TESTER
static const char *st_seq_tokens[] = { "👆", "👍", "★", "✪" };
static const char *st_seq_metachars[] = { "∆", "∇", "∂", "‼", "‥", "•", "‸", "∀" };
static const char *st_trans_seq_ref_tokens[] = { "◯", "⑴", "⑵", "⑶", "⑷", "⑸", "⑹", "⑺" };
static const char *st_space_token = "⎵";
#endif

// Sequence Transformation dictionary with longest match semantics
// Dictionary (44 entries):
//    a👆    -> ao
//    o👆    -> oa
//    u👆    -> ue
//    e👆    -> eu
//    i👆    -> ike
//    p👆    -> py
//    x👆    -> xp
//    h👆    -> hy
//    y👆    -> yp
//    w👆    -> ws
//    s👆    -> sw
//    z👆    -> zs
//    v👆    -> vs
//    r👆    -> rl
//    l👆    -> lr
//    b👆    -> bl
//    n👆    -> nb
//    t👆    -> tw
//    g👆    -> gs
//    qe    -> que
//    qa    -> qua
//    qi    -> qui
//    qo    -> quo
//    ‸i👆   -> ‸I
//    i👆👆   -> ik
//    ‸k👆   -> ‸ki
//    ∇k👆   -> ∇ki
//    ab👆   -> able
//    quu   -> qu
//    qaa   -> qa
//    qee   -> qe
//    qii   -> qi
//    qoo   -> qo
//    ‸i👆l  -> ‸I'll
//    ‸i👆v  -> ‸I've
//    ‸i👆m  -> ‸I'm
//    ∇k👆g  -> ∇king
//    ∇k👆d  -> ∇kind
//    ab👆y  -> ably
//    dont👆 -> don't
//    wont👆 -> won't
//    cant👆 -> can't
//    ∇dnt👆 -> ∇dn't
//    ∇ldv👆 -> ∇ld've

static const uint8_t sequence_transform_trie[SEQUENCE_TRIE_SIZE] PROGMEM = {
    0x40, 0x61, 0x00, 0x2F, 0x64, 0x00, 0x3E, 0x65, 0x00, 0x45, 0x67, 0x00, 0x54, 0x69, 0x00, 0x5B,
    0x6C, 0x00, 0x6A, 0x6D, 0x00, 0x71, 0x6F, 0x00, 0x78, 0x75, 0x00, 0x87, 0x76, 0x00, 0x90, 0x79,
    0x00, 0x97, 0x80, 0x00, 0x9E, 0x81, 0x01, 0xA2, 0x82, 0x01, 0xA7, 0x83, 0x01, 0xAC, 0x00, 0xC1,
    0x00, 0x3A, 0x42, 0x01, 0x00, 0x13, 0x01, 0x71, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x12, 0x81, 0x01,
    0x1E, 0x40, 0x02, 0x00, 0x0E, 0xC1, 0x00, 0x50, 0x42, 0x01, 0x00, 0x05, 0x01, 0x71, 0x00, 0xA0,
    0x40, 0x02, 0x00, 0x14, 0x81, 0x01, 0x1E, 0x40, 0x02, 0x00, 0x10, 0xC1, 0x00, 0x66, 0x42, 0x01,
    0x00, 0x17, 0x01, 0x71, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x16, 0x81, 0x01, 0x11, 0x40, 0x03, 0x00,
    0x00, 0x81, 0x01, 0x11, 0x40, 0x02, 0x00, 0x06, 0xC1, 0x00, 0x83, 0x42, 0x01, 0x00, 0x19, 0x01,
    0x71, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x18, 0x01, 0x75, 0x71, 0x00, 0xA0, 0x40, 0x00, 0x00, 0x00,
    0x81, 0x01, 0x11, 0x40, 0x03, 0x00, 0x03, 0x81, 0x00, 0xF5, 0x41, 0x01, 0x00, 0x20, 0xE1, 0x80,
    0x00, 0x00, 0x00, 0x01, 0x09, 0x41, 0x00, 0x00, 0x00, 0x40, 0x61, 0x00, 0xE7, 0x62, 0x00, 0xEC,
    0x65, 0x00, 0xF9, 0x67, 0x00, 0xFE, 0x68, 0x01, 0x03, 0x69, 0x01, 0x08, 0x6B, 0x01, 0x15, 0x6C,
    0x01, 0x27, 0x6E, 0x01, 0x2C, 0x6F, 0x01, 0x31, 0x70, 0x01, 0x36, 0x72, 0x01, 0x3B, 0x73, 0x01,
    0x40, 0x74, 0x01, 0x45, 0x75, 0x01, 0x7A, 0x76, 0x01, 0x7F, 0x77, 0x01, 0x8E, 0x78, 0x01, 0x93,
    0x79, 0x01, 0x98, 0x7A, 0x01, 0x9D, 0x00, 0xA0, 0x40, 0x01, 0x00, 0x19, 0xE0, 0xC0, 0x01, 0x00,
    0x01, 0x01, 0x61, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x0C, 0xA0, 0x40, 0x01, 0x00, 0x12, 0xA0, 0x40,
    0x01, 0x00, 0x1E, 0xA0, 0x40, 0x01, 0x00, 0x20, 0xE0, 0xC0, 0x02, 0x00, 0x0A, 0x01, 0xA6, 0x00,
    0xA0, 0x41, 0x01, 0x00, 0x1A, 0x60, 0xA1, 0x01, 0x1D, 0xA6, 0x01, 0x22, 0x00, 0xA0, 0x40, 0x01,
    0x00, 0x17, 0xA0, 0x40, 0x01, 0x00, 0x17, 0xA0, 0x40, 0x01, 0x00, 0x1D, 0xA0, 0x40, 0x01, 0x00,
    0x1B, 0xA0, 0x40, 0x01, 0x00, 0x13, 0xA0, 0x40, 0x01, 0x00, 0x20, 0xA0, 0x40, 0x01, 0x00, 0x01,
    0xA0, 0x40, 0x01, 0x00, 0x1F, 0xE0, 0xC0, 0x01, 0x00, 0x1F, 0x01, 0x6E, 0x00, 0x40, 0x61, 0x01,
    0x58, 0x64, 0x01, 0x60, 0x6F, 0x01, 0x68, 0x00, 0x01, 0x63, 0x00, 0xA0, 0x41, 0x02, 0x00, 0x08,
    0x01, 0xA1, 0x00, 0xA0, 0x41, 0x02, 0x00, 0x08, 0x40, 0x64, 0x01, 0x70, 0x77, 0x01, 0x75, 0x00,
    0xA0, 0x41, 0x02, 0x00, 0x08, 0xA0, 0x41, 0x02, 0x00, 0x08, 0xA0, 0x40, 0x01, 0x00, 0x05, 0xE0,
    0xC0, 0x01, 0x00, 0x1E, 0x01, 0x64, 0x6C, 0xA1, 0x00, 0xA0, 0x41, 0x03, 0x00, 0x03, 0xA0, 0x40,
    0x01, 0x00, 0x1E, 0xA0, 0x40, 0x01, 0x00, 0x1C, 0xA0, 0x40, 0x01, 0x00, 0x1C, 0xA0, 0x40, 0x01,
    0x00, 0x1E, 0xA0, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00,
    0x00
};

static const uint8_t sequence_transform_completions_data[COMPLETIONS_SIZE] PROGMEM = {
    0x27, 0x6C, 0x6C, 0x27, 0x76, 0x65, 0x27, 0x6D, 0x27, 0x74, 0x6B, 0x65, 0x6C, 0x65, 0x6E, 0x64,
    0x6E, 0x67, 0x75, 0x61, 0x75, 0x65, 0x75, 0x69, 0x75, 0x6F, 0x49, 0x62, 0x70, 0x72, 0x73, 0x77,
    0x79
};
