// Copyright 2024 QMK
// SPDX-License-Identifier: GPL-2.0-or-later

// This was file generated on 2024-07-15 13:00:27.
// Do not edit this file directly!

#pragma once

#define SEQUENCE_TRANSFORM_GENERATOR_VERSION_3_2

#define TRIECODE_SEQUENCE_TOKEN_0 0x0080
#define TRIECODE_SEQUENCE_METACHAR_0 0x00A0
#define TRIECODE_SEQUENCE_REF_TOKEN_0 0x0080
#define SEQUENCE_MIN_LENGTH 2 // "aüëÜ"
#define SEQUENCE_MAX_LENGTH 8 // "‚Ä∏theyre‚éµ"
#define TRANSFORM_MAX_LENGTH 9 // "‚Ä∏they're‚éµ"
#define COMPLETION_MAX_LENGTH 6
#define MAX_BACKSPACES 4
#define SEQUENCE_TRIE_SIZE 907
#define COMPLETIONS_SIZE 66
#define SEQUENCE_TOKEN_COUNT 4
#define SEQUENCE_METACHAR_COUNT 8
#define SEQUENCE_REF_TOKEN_COUNT 8

static const char st_seq_token_ascii_chars[] = { '*', '@', '#', '&' };
#ifdef ST_TESTER
static const char *st_seq_tokens[] = { "üëÜ", "üëà", "‚òÖ", "üëç" };
static const char *st_seq_metachars[] = { "‚àÜ", "‚àá", "‚àÇ", "‚Äº", "‚Ä•", "‚Ä¢", "‚Ä∏", "‚àÄ" };
static const char *st_trans_seq_ref_tokens[] = { "‚óØ", "‚ë¥", "‚ëµ", "‚ë∂", "‚ë∑", "‚ë∏", "‚ëπ", "‚ë∫" };
static const char *st_space_token = "‚éµ";
#endif

// Sequence Transformation dictionary with longest match semantics
// Dictionary (98 entries):
//    aüëÜ       -> ao
//    oüëÜ       -> oa
//    uüëÜ       -> ue
//    eüëÜ       -> eu
//    cüëà       -> `a
//    ‚Ä∏üëà       -> ‚Ä∏f
//    ‚Ä∏üëÜ       -> ‚Ä∏w
//    iüëÜ       -> ike
//    cüëÜ       -> ck
//    püëÜ       -> py
//    xüëÜ       -> xp
//    hüëÜ       -> hy
//    yüëÜ       -> yp
//    wüëÜ       -> ws
//    süëÜ       -> sw
//    züëÜ       -> zs
//    vüëÜ       -> vs
//    rüëÜ       -> rl
//    lüëÜ       -> lr
//    büëÜ       -> bl
//    nüëÜ       -> nb
//    tüëÜ       -> tw
//    güëÜ       -> gs
//    s‚òÖ       -> sf
//    r‚òÖ       -> rl
//    l‚òÖ       -> lr
//    b‚òÖ       -> bh
//    h‚òÖ       -> hb
//    x‚òÖ       -> xc
//    f‚òÖ       -> fl
//    u‚òÖ       -> ue
//    e‚òÖ       -> eu
//    o‚òÖ       -> oa
//    a‚òÖ       -> ao
//    y‚òÖ       -> yi
//    i‚òÖ       -> iy
//    p‚òÖ       -> pl
//    g‚òÖ       -> gc
//    c‚òÖ       -> cg
//    qe       -> que
//    qa       -> qua
//    qi       -> qui
//    qo       -> quo
//    ‚Ä∏iüëà      -> ‚Ä∏i
//    ‚Ä∏iüëÜ      -> ‚Ä∏I‚éµ
//    ‚àátüëÜ      -> ‚àátw
//    ifüëÜ      -> ife
//    iüëÜüëà      -> iking‚éµ
//    ‚Ä∏eüëÜ      -> ‚Ä∏key
//    ‚Ä∏küëÜ      -> ‚Ä∏ki
//    cküëÜ      -> cky
//    ‚àáküëÜ      -> ‚àáky
//    abüëÜ      -> able
//    qa‚òÖ      -> qa
//    qe‚òÖ      -> qe
//    qi‚òÖ      -> qi
//    qo‚òÖ      -> qo
//    ‚Ä∏eeüëÜ     -> ‚Ä∏eu
//    ‚Ä∏weüëÜ     -> ‚Ä∏we're‚éµ
//    ‚Ä∏heüëà     -> ‚Ä∏he
//    ‚àántüëÜ     -> ‚àán't
//    ‚Ä∏iüëàl     -> ‚Ä∏I'll‚éµ
//    ‚Ä∏iüëàv     -> ‚Ä∏I've‚éµ
//    ‚Ä∏iüëàm     -> ‚Ä∏I'm‚éµ
//    ‚Ä∏iüëàs     -> ‚Ä∏it's‚éµ
//    ‚Ä∏iüëÜl     -> ‚Ä∏I'll‚éµ
//    ‚Ä∏iüëÜv     -> ‚Ä∏I've‚éµ
//    ‚Ä∏iüëÜm     -> ‚Ä∏I'm‚éµ
//    ‚Ä∏itüëÜ     -> ‚Ä∏it'
//    ‚àátüëÜs     -> ‚àát's‚éµ
//    iffüëÜ     -> ifa
//    cküëÜl     -> ckly
//    ‚Ä∏ohüëÜ     -> ‚Ä∏okay
//    ‚àáküëÜg     -> ‚àáking
//    ‚àáküëÜd     -> ‚àákind
//    abüëÜy     -> ably
//    abüëÜi     -> abli
//    quuüëÜ     -> qu
//    qaaüëÜ     -> qa
//    qeeüëÜ     -> qe
//    qiiüëÜ     -> qi
//    qooüëÜ     -> qo
//    ‚Ä∏weüëÜr    -> ‚Ä∏we's‚éµ
//    ‚Ä∏weüëÜl    -> ‚Ä∏we'll‚éµ
//    ‚Ä∏weüëÜs    -> ‚Ä∏we've‚éµ
//    ‚Ä∏weüëÜd    -> ‚Ä∏we'd‚éµ
//    ‚Ä∏heüëàd    -> ‚Ä∏he'd‚éµ
//    ‚Ä∏heüëàs    -> ‚Ä∏he's‚éµ
//    ‚Ä∏heüëàl    -> ‚Ä∏he'll‚éµ
//    ‚àáldüëÜs    -> ‚àáld've
//    ‚Ä∏oud‚éµ    -> don't‚éµ
//    ‚Ä∏itüëÜs    -> ‚Ä∏it's‚éµ
//    ‚Ä∏dont‚éµ   -> ‚Ä∏don't‚éµ
//    ‚Ä∏wont‚éµ   -> ‚Ä∏won't‚éµ
//    ‚Ä∏cant‚éµ   -> ‚Ä∏can't‚éµ
//    ‚Ä∏didnt‚éµ  -> ‚Ä∏didn't‚éµ
//    ‚Ä∏youre‚éµ  -> ‚Ä∏you're‚éµ
//    ‚Ä∏theyre‚éµ -> ‚Ä∏they're‚éµ

static const uint8_t sequence_transform_trie[SEQUENCE_TRIE_SIZE] PROGMEM = {
    0x40, 0x20, 0x00, 0x35, 0x61, 0x00, 0xA3, 0x64, 0x00, 0xAB, 0x65, 0x00, 0xBE, 0x67, 0x00, 0xC6,
    0x69, 0x00, 0xCD, 0x6C, 0x00, 0xDC, 0x6D, 0x00, 0xFB, 0x6F, 0x01, 0x08, 0x72, 0x01, 0x10, 0x73,
    0x01, 0x17, 0x76, 0x01, 0x41, 0x79, 0x01, 0x4E, 0x80, 0x01, 0x55, 0x81, 0x02, 0xB3, 0x82, 0x02,
    0xE7, 0x83, 0x03, 0x86, 0x00, 0x40, 0x64, 0x00, 0x40, 0x65, 0x00, 0x4A, 0x74, 0x00, 0x6A, 0x00,
    0x01, 0x75, 0x6F, 0xA6, 0x00, 0xA0, 0x04, 0x06, 0x00, 0x00, 0x01, 0x72, 0x00, 0x40, 0x75, 0x00,
    0x55, 0x79, 0x00, 0x5F, 0x00, 0x01, 0x6F, 0x79, 0xA6, 0x00, 0xA0, 0x02, 0x04, 0x00, 0x10, 0x01,
    0x65, 0x68, 0x74, 0xA6, 0x00, 0xA0, 0x02, 0x04, 0x00, 0x10, 0x01, 0x6E, 0x00, 0x40, 0x61, 0x00,
    0x78, 0x64, 0x00, 0x81, 0x6F, 0x00, 0x8B, 0x00, 0x01, 0x63, 0xA6, 0x00, 0xA0, 0x01, 0x03, 0x00,
    0x03, 0x01, 0x69, 0x64, 0xA6, 0x00, 0xA0, 0x01, 0x03, 0x00, 0x03, 0x40, 0x64, 0x00, 0x93, 0x77,
    0x00, 0x9B, 0x00, 0x01, 0xA6, 0x00, 0xA0, 0x01, 0x03, 0x00, 0x03, 0x01, 0xA6, 0x00, 0xA0, 0x01,
    0x03, 0x00, 0x03, 0x01, 0x71, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x34, 0x83, 0x02, 0x35, 0x41, 0x03,
    0x00, 0x23, 0x01, 0xE0, 0x43, 0x02, 0x00, 0x21, 0x02, 0xD6, 0x40, 0x03, 0x00, 0x20, 0x01, 0x71,
    0x00, 0xA0, 0x40, 0x02, 0x00, 0x36, 0x81, 0x02, 0x35, 0x41, 0x03, 0x00, 0x18, 0xC1, 0x01, 0xB5,
    0x41, 0x01, 0x00, 0x18, 0x01, 0x71, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x38, 0x85, 0x02, 0xDE, 0x41,
    0x05, 0x00, 0x06, 0x02, 0x20, 0x41, 0x04, 0x00, 0x07, 0x02, 0x30, 0x41, 0x02, 0x00, 0x32, 0x01,
    0xE0, 0x43, 0x03, 0x00, 0x08, 0x02, 0xD6, 0x40, 0x04, 0x00, 0x07, 0x82, 0x02, 0xDE, 0x41, 0x04,
    0x00, 0x14, 0x02, 0x20, 0x41, 0x03, 0x00, 0x15, 0x01, 0x71, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x3A,
    0x81, 0x01, 0xE0, 0x43, 0x02, 0x00, 0x1E, 0xC5, 0x02, 0xDE, 0x40, 0x04, 0x00, 0x1C, 0x02, 0x83,
    0x41, 0x03, 0x00, 0x1D, 0x01, 0xE0, 0x43, 0x03, 0x00, 0x0D, 0x02, 0xD6, 0x40, 0x03, 0x00, 0x1D,
    0x02, 0x76, 0x40, 0x02, 0x00, 0x1E, 0x01, 0x80, 0x64, 0x6C, 0xA1, 0x00, 0xA0, 0x41, 0x03, 0x00,
    0x0C, 0x82, 0x02, 0xDE, 0x41, 0x05, 0x00, 0x0B, 0x02, 0x20, 0x41, 0x04, 0x00, 0x0C, 0x81, 0x01,
    0xB5, 0x41, 0x01, 0x00, 0x28, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x60, 0x61, 0x01, 0xA1, 0x62, 0x01,
    0xAC, 0x63, 0x01, 0xB9, 0x65, 0x01, 0xBE, 0x66, 0x01, 0xE9, 0x67, 0x01, 0xFE, 0x68, 0x02, 0x03,
    0x69, 0x02, 0x11, 0x6B, 0x02, 0x24, 0x6C, 0x02, 0x3E, 0x6E, 0x02, 0x43, 0x6F, 0x02, 0x48, 0x70,
    0x02, 0x53, 0x72, 0x02, 0x58, 0x73, 0x02, 0x5D, 0x74, 0x02, 0x62, 0x75, 0x02, 0x87, 0x76, 0x02,
    0x95, 0x77, 0x02, 0x9A, 0x78, 0x02, 0x9F, 0x79, 0x02, 0xA4, 0x7A, 0x02, 0xA9, 0xA6, 0x02, 0xAE,
    0x00, 0xA1, 0x40, 0x01, 0x00, 0x01, 0x00, 0xA7, 0x43, 0x01, 0x00, 0x27, 0xE0, 0xC0, 0x01, 0x00,
    0x08, 0x01, 0x61, 0x00, 0xA0, 0x40, 0x02, 0x00, 0x30, 0xA0, 0x40, 0x01, 0x00, 0x26, 0xE1, 0xC0,
    0x01, 0x00, 0x34, 0x00, 0xC2, 0x43, 0x01, 0x00, 0x0E, 0x60, 0x65, 0x01, 0xD4, 0x77, 0x01, 0xDC,
    0xA6, 0x01, 0xE4, 0x00, 0x01, 0xA6, 0x00, 0xA0, 0x41, 0x01, 0x00, 0x34, 0x01, 0xA6, 0x00, 0xA0,
    0x40, 0x04, 0x00, 0x10, 0xA0, 0x41, 0x03, 0x00, 0x29, 0x40, 0x66, 0x01, 0xF1, 0x69, 0x01, 0xF9,
    0x00, 0x01, 0x69, 0x00, 0xA0, 0x41, 0x01, 0x00, 0x27, 0xA0, 0x40, 0x01, 0x00, 0x0E, 0xA0, 0x40,
    0x01, 0x00, 0x1E, 0xE0, 0xC0, 0x01, 0x00, 0x28, 0x01, 0x6F, 0xA6, 0x00, 0xA0, 0x41, 0x03, 0x00,
    0x26, 0xE1, 0xC0, 0x02, 0x00, 0x29, 0x00, 0xD8, 0x43, 0x01, 0x00, 0x18, 0x01, 0xA6, 0x00, 0xA0,
    0x41, 0x02, 0x00, 0x2C, 0x60, 0x63, 0x02, 0x2F, 0xA1, 0x02, 0x34, 0xA6, 0x02, 0x39, 0x00, 0xA0,
    0x40, 0x01, 0x00, 0x28, 0xA0, 0x40, 0x01, 0x00, 0x28, 0xA0, 0x40, 0x01, 0x00, 0x18, 0xA0, 0x40,
    0x01, 0x00, 0x11, 0xA0, 0x40, 0x01, 0x00, 0x3C, 0xA1, 0x40, 0x01, 0x00, 0x27, 0x01, 0x0C, 0x43,
    0x01, 0x00, 0x01, 0xA0, 0x40, 0x01, 0x00, 0x28, 0xA0, 0x40, 0x01, 0x00, 0x08, 0xA0, 0x40, 0x01,
    0x00, 0x41, 0xE0, 0xC0, 0x01, 0x00, 0x41, 0x60, 0x69, 0x02, 0x72, 0x6E, 0x02, 0x7A, 0xA1, 0x02,
    0x82, 0x00, 0x01, 0xA6, 0x00, 0xA0, 0x40, 0x01, 0x00, 0x03, 0x01, 0xA1, 0x00, 0xA0, 0x41, 0x02,
    0x00, 0x03, 0xA0, 0x40, 0x01, 0x00, 0x41, 0xE0, 0xC0, 0x01, 0x00, 0x0E, 0x01, 0x75, 0x71, 0x00,
    0xA0, 0x41, 0x00, 0x00, 0x00, 0xA0, 0x40, 0x01, 0x00, 0x1E, 0xA0, 0x40, 0x01, 0x00, 0x1E, 0xA0,
    0x40, 0x01, 0x00, 0x40, 0xA0, 0x40, 0x01, 0x00, 0x40, 0xA0, 0x40, 0x01, 0x00, 0x1E, 0xA0, 0x40,
    0x01, 0x00, 0x41, 0xE1, 0x80, 0x00, 0x00, 0x00, 0x02, 0x12, 0x41, 0x04, 0x00, 0x18, 0x60, 0x63,
    0x02, 0xCC, 0x65, 0x02, 0xD1, 0x69, 0x02, 0xDA, 0xA6, 0x02, 0xE2, 0x00, 0xA0, 0x41, 0x02, 0x00,
    0x2E, 0x01, 0x68, 0xA6, 0x00, 0xA0, 0x40, 0x00, 0x00, 0x00, 0x01, 0xA6, 0x00, 0xA0, 0x40, 0x00,
    0x00, 0x00, 0xA0, 0x40, 0x01, 0x00, 0x3E, 0xE4, 0x80, 0x00, 0x00, 0x00, 0x00, 0xA7, 0x42, 0x01,
    0x00, 0x27, 0x00, 0xC2, 0x42, 0x01, 0x00, 0x0E, 0x00, 0xD8, 0x42, 0x01, 0x00, 0x18, 0x01, 0x0C,
    0x42, 0x01, 0x00, 0x01, 0x40, 0x61, 0x03, 0x36, 0x62, 0x03, 0x3B, 0x63, 0x03, 0x40, 0x65, 0x03,
    0x45, 0x66, 0x03, 0x4A, 0x67, 0x03, 0x4F, 0x68, 0x03, 0x54, 0x69, 0x03, 0x59, 0x6C, 0x03, 0x5E,
    0x6F, 0x03, 0x63, 0x70, 0x03, 0x68, 0x72, 0x03, 0x6D, 0x73, 0x03, 0x72, 0x75, 0x03, 0x77, 0x78,
    0x03, 0x7C, 0x79, 0x03, 0x81, 0x00, 0xA0, 0x40, 0x01, 0x00, 0x01, 0xA0, 0x40, 0x01, 0x00, 0x3F,
    0xA0, 0x40, 0x01, 0x00, 0x1A, 0xA0, 0x40, 0x01, 0x00, 0x34, 0xA0, 0x40, 0x01, 0x00, 0x08, 0xA0,
    0x40, 0x01, 0x00, 0x3D, 0xA0, 0x40, 0x01, 0x00, 0x3C, 0xA0, 0x40, 0x01, 0x00, 0x28, 0xA0, 0x40,
    0x01, 0x00, 0x11, 0xA0, 0x40, 0x01, 0x00, 0x27, 0xA0, 0x40, 0x01, 0x00, 0x08, 0xA0, 0x40, 0x01,
    0x00, 0x08, 0xA0, 0x40, 0x01, 0x00, 0x3E, 0xA0, 0x40, 0x01, 0x00, 0x0E, 0xA0, 0x40, 0x01, 0x00,
    0x3D, 0xA0, 0x40, 0x01, 0x00, 0x18, 0xA0, 0x00, 0x00, 0x00, 0x00
};

static const uint8_t sequence_transform_completions_data[COMPLETIONS_SIZE] PROGMEM = {
    0x64, 0x6F, 0x6E, 0x27, 0x74, 0x20, 0x49, 0x27, 0x6C, 0x6C, 0x20, 0x49, 0x27, 0x76, 0x65, 0x20,
    0x27, 0x72, 0x65, 0x20, 0x49, 0x27, 0x6D, 0x20, 0x69, 0x6E, 0x67, 0x20, 0x74, 0x27, 0x73, 0x20,
    0x27, 0x64, 0x20, 0x69, 0x6E, 0x64, 0x6B, 0x61, 0x79, 0x6B, 0x65, 0x79, 0x49, 0x20, 0x60, 0x61,
    0x6C, 0x65, 0x6C, 0x79, 0x75, 0x61, 0x75, 0x65, 0x75, 0x69, 0x75, 0x6F, 0x62, 0x63, 0x66, 0x68,
    0x70, 0x77
};
